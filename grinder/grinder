#! /usr/bin/env python
import configparser
import git
import os
import urllib.request

origdir = os.getcwd()

# Source configuration
conf = configparser.ConfigParser()
conf.read("conf/grinder.conf")

def lsremote(url):
    remote_refs = {}
    g = git.cmd.Git()
    for ref in g.ls_remote(url).split('\n'):
        hash_ref_list = ref.split('\t')
        remote_refs[hash_ref_list[1]] = hash_ref_list[0]
    return remote_refs

print("Configuration loaded.")
print("Base directory for environments:  " + str(conf['environment']['environmentdir']))
print("Remote Salt States repository:  " + str(conf['environment']['statesrepo']))
print("Remote Pillar repository:  " + str(conf['environment']['statesrepo']))

# Read repository master branches
statebranches = lsremote(conf['environment']['statesrepo'])
pillarbranches = lsremote(conf['environment']['pillarrepo'])

# Make directory structure for the branch
print("Branches of Salt States:  ")
for key in statebranches:
  if key != "HEAD":
    branch = key.split('/')[-1]
    print(branch)
    try:
      os.makedirs(conf['environment']['environmentdir'] + "/" + branch + "/states", 0o755)

      # Change into the branchdir
      os.chdir(conf['environment']['environmentdir'] + "/" + branch)

      # Grab zipfile of the branch
      # urllib.request.urlretrieve(str(conf['environment']['statesrepo']) + "/archive/" + branch + ".zip", branch + ".zip")

      # Expand in states
      # cd states ; unzip <branch>.zip

      # Cleanup
      # cd branchdir ; rm <branch>.zip
    except:
      pass

print("Branches of Pillar:  ")
for key in pillarbranches:
  if key != "HEAD":
    branch = key.split('/')[-1]
    print(branch)
    try:
      os.makedirs(conf['environment']['environmentdir'] + "/" + branch + "/pillar", 0o755)

      # Change into the branchdir
      os.chdir(conf['environment']['environmentdir'] + "/" + branch)

      # Grab zipfile of the branch
      # urllib.request.urlretrieve(str(conf['environment']['pillarrepo']) + "/archive/" + branch + ".zip", branch + ".zip")

      # Expand in states
      # cd states ; unzip <branch>.zip

      # Cleanup
      # cd branchdir ; rm <branch>.zip
    except:
      pass
