#! /usr/bin/env python
import configparser
import git
import os

origdir = os.getcwd()

# Source configuration
conf = configparser.ConfigParser()
conf.read("conf/grinder.conf")

def lsremote(url):
    remote_refs = {}
    g = git.cmd.Git()
    for ref in g.ls_remote(url).split('\n'):
        hash_ref_list = ref.split('\t')
        remote_refs[hash_ref_list[1]] = hash_ref_list[0]
    return remote_refs

print("Configuration loaded.")
print("Base directory for environments:  " + str(conf['environment']['environmentdir']))
print("Remote Salt States repository:  " + str(conf['environment']['statesrepo']))
print("Remote Pillar repository:  " + str(conf['environment']['statesrepo']))

# Read repository master branches
statebranches = lsremote(conf['environment']['statesrepo'])
pillarbranches = lsremote(conf['environment']['pillarrepo'])

print("Branches of Salt States:  ")
for key in statebranches:
  if key != "HEAD":
    print(key.split('/')[-1])

print("Branches of Pillar:  ")
for key in pillarbranches:
  if key != "HEAD":
    print(key.split('/')[-1])

# Change directory to the environments directory
os.chdir(conf['environment']['environmentdir'])

# Make directory structure for the branch
#os.makedirs(conf['environment']['environmentdir'] + branchname + states, 0755)
#os.makedirs(conf['environment']['environmentdir'] + branchname + pillar, 0755)

# Change into the branchdir
# cd <branch>
# branchdir = pwd

# Grab zipfile of the branch
# https://github.com/<user>/<repo>/archive/<branch>.zip

# Expand in states
# cd states ; unzip <branch>.zip

# Cleanup
# cd branchdir ; rm <branch>.zip
